<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.2.xsd 
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<!-- Enables the Spring Task @Scheduled programming model -->
	<!-- 
	<task:executor id="executor" pool-size="1" />
	<task:scheduler id="scheduler" pool-size="1" />
	<task:annotation-driven executor="executor" scheduler="scheduler" />
	-->
	<!--发货后自动收货-->
	<bean id="automaticOrderStatusJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reciveTask"/>
		<property name="targetMethod" value="automaticOrderStatus" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>	
	
	<bean id="automaticOrderStatusCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="automaticOrderStatusJob" />  
		<!--间隔2小时执行一次-->
		<property name="cronExpression" value="0 0 0/2 * * ?" />  
	</bean>  	
	
	<!--自动取消订单-->
	<bean id="autoCanelOrderJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reciveTask"/>
		<property name="targetMethod" value="autoCanelOrder" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>	
	
	<bean id="autoCanelOrderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="autoCanelOrderJob" />  
		<!--间隔2小时执行一次-->
		<property name="cronExpression" value="0 0 0/2 * * ?" />  
	</bean> 

	<!--当日商家订单统-->
	<bean id="supplierOrderStatisticsTaskJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="supplierOrderStatisticsTask"/>
		<property name="targetMethod" value="generateSupplierOrderStatistics" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>	
	
	<bean id="supplierOrderStatisticsTaskCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="supplierOrderStatisticsTaskJob" />  
		<property name="cronExpression" value="0 1 1 * * ?" />  
	</bean> 	
	<!--心跳测试
	<bean id="heartbeatJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reciveTask"/>
		<property name="targetMethod" value="heartbeat" />
		<property name="concurrent" value="false" />
	</bean>	
	
	<bean id="heartbeatJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="heartbeatJob" />  
		<property name="cronExpression" value="*/5 * * * * ?" />  
	</bean> 	
	-->

	<bean id="schedulerTparts" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
		<property name="triggers">
			<list>
				<ref bean="automaticOrderStatusCronTrigger" />
				<ref bean="autoCanelOrderCronTrigger" />
				<ref bean="supplierOrderStatisticsTaskCronTrigger" />
			<!--	<ref bean="heartbeatJobCronTrigger" /> -->
			</list>
		</property>
	</bean>

</beans>